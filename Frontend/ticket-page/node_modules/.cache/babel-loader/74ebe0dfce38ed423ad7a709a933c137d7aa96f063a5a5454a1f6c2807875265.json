{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport axios from \"axios\";\nimport TicketForm from \"@/components/TicketForm.vue\";\nimport TicketCard from \"@/components/TicketCard.vue\";\nimport CardFilter from \"@/components/CardFilter.vue\";\nexport default {\n  components: {\n    TicketForm,\n    CardFilter,\n    TicketCard\n  },\n  data() {\n    return {\n      tickets: [],\n      // Holds the list of all tickets\n      filterStatus: \"\",\n      // Tracks the selected status filter\n      sortField: \"created_at\" // Tracks the selected sort field\n    };\n  },\n  computed: {\n    filteredTickets() {\n      let filtered = [...this.tickets];\n\n      // Apply status filter\n      if (this.filterStatus) {\n        filtered = filtered.filter(ticket => ticket.status === this.filterStatus);\n      }\n\n      // Apply sorting logic\n      if (this.sortField === \"status\") {\n        const statusOrder = {\n          Pending: 1,\n          Accepted: 2,\n          Resolved: 3,\n          Rejected: 4\n        };\n        filtered.sort((a, b) => statusOrder[a.status] - statusOrder[b.status]);\n      } else {\n        // Sort by date fields (created_at or updated_at)\n        filtered.sort((a, b) => new Date(b[this.sortField]) - new Date(a[this.sortField]));\n      }\n      return filtered;\n    }\n  },\n  mounted() {\n    this.fetchTickets(); // Fetch tickets when the component is mounted\n  },\n  methods: {\n    async fetchTickets() {\n      try {\n        const response = await axios.get(\"http://127.0.0.1:5000/tickets\");\n        this.tickets = response.data; // Populate the tickets array with API data\n      } catch (error) {\n        console.error(\"Error fetching tickets:\", error);\n      }\n    },\n    applyFilter(status) {\n      this.filterStatus = status; // Update the filter status based on CardFilter input\n    },\n    applySort(field) {\n      this.sortField = field; // Update the sort field based on CardFilter input\n    }\n  }\n};","map":{"version":3,"names":["axios","TicketForm","TicketCard","CardFilter","components","data","tickets","filterStatus","sortField","computed","filteredTickets","filtered","filter","ticket","status","statusOrder","Pending","Accepted","Resolved","Rejected","sort","a","b","Date","mounted","fetchTickets","methods","response","get","error","console","applyFilter","applySort","field"],"sources":["C:\\Users\\uSeR\\Desktop\\help-desk\\Frontend\\ticket-page\\src\\views\\TicketHome.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <!-- Ticket creation form -->\r\n    <TicketForm @ticket-created=\"fetchTickets\" />\r\n\r\n    <!-- Card Filter for sorting and filtering -->\r\n    <CardFilter \r\n      @filter-updated=\"applyFilter\" \r\n      @sort-updated=\"applySort\" \r\n    />\r\n\r\n    <!-- Ticket list -->\r\n    <div class=\"container mt-4\">\r\n      <div class=\"row\">\r\n        <TicketCard \r\n          v-for=\"ticket in filteredTickets\" \r\n          :key=\"ticket.id\" \r\n          :ticket=\"ticket\" \r\n          @ticket-updated=\"fetchTickets\" \r\n          class=\"col-md-4 mb-4\"\r\n        />\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport TicketForm from \"@/components/TicketForm.vue\";\r\nimport TicketCard from \"@/components/TicketCard.vue\";\r\nimport CardFilter from \"@/components/CardFilter.vue\";\r\n\r\nexport default {\r\n  components: {\r\n    TicketForm,\r\n    CardFilter,\r\n    TicketCard,\r\n  },\r\n  data() {\r\n    return {\r\n      tickets: [], // Holds the list of all tickets\r\n      filterStatus: \"\", // Tracks the selected status filter\r\n      sortField: \"created_at\", // Tracks the selected sort field\r\n    };\r\n  },\r\n  computed: {\r\n    filteredTickets() {\r\n      let filtered = [...this.tickets];\r\n\r\n      // Apply status filter\r\n      if (this.filterStatus) {\r\n        filtered = filtered.filter(ticket => ticket.status === this.filterStatus);\r\n      }\r\n\r\n      // Apply sorting logic\r\n      if (this.sortField === \"status\") {\r\n        const statusOrder = { Pending: 1, Accepted: 2, Resolved: 3, Rejected: 4 };\r\n        filtered.sort((a, b) => statusOrder[a.status] - statusOrder[b.status]);\r\n      } else {\r\n        // Sort by date fields (created_at or updated_at)\r\n        filtered.sort((a, b) => new Date(b[this.sortField]) - new Date(a[this.sortField]));\r\n      }\r\n\r\n      return filtered;\r\n    },\r\n  },\r\n  mounted() {\r\n    this.fetchTickets(); // Fetch tickets when the component is mounted\r\n  },\r\n  methods: {\r\n    async fetchTickets() {\r\n      try {\r\n        const response = await axios.get(\"http://127.0.0.1:5000/tickets\");\r\n        this.tickets = response.data; // Populate the tickets array with API data\r\n      } catch (error) {\r\n        console.error(\"Error fetching tickets:\", error);\r\n      }\r\n    },\r\n    applyFilter(status) {\r\n      this.filterStatus = status; // Update the filter status based on CardFilter input\r\n    },\r\n    applySort(field) {\r\n      this.sortField = field; // Update the sort field based on CardFilter input\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Styling for the ticket cards */\r\n.ticket-list {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 20px;\r\n}\r\n</style>\r\n"],"mappings":";;AA2BA,OAAOA,KAAI,MAAO,OAAO;AACzB,OAAOC,UAAS,MAAO,6BAA6B;AACpD,OAAOC,UAAS,MAAO,6BAA6B;AACpD,OAAOC,UAAS,MAAO,6BAA6B;AAEpD,eAAe;EACbC,UAAU,EAAE;IACVH,UAAU;IACVE,UAAU;IACVD;EACF,CAAC;EACDG,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,EAAE;MAAE;MACbC,YAAY,EAAE,EAAE;MAAE;MAClBC,SAAS,EAAE,YAAY,CAAE;IAC3B,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,eAAeA,CAAA,EAAG;MAChB,IAAIC,QAAO,GAAI,CAAC,GAAG,IAAI,CAACL,OAAO,CAAC;;MAEhC;MACA,IAAI,IAAI,CAACC,YAAY,EAAE;QACrBI,QAAO,GAAIA,QAAQ,CAACC,MAAM,CAACC,MAAK,IAAKA,MAAM,CAACC,MAAK,KAAM,IAAI,CAACP,YAAY,CAAC;MAC3E;;MAEA;MACA,IAAI,IAAI,CAACC,SAAQ,KAAM,QAAQ,EAAE;QAC/B,MAAMO,WAAU,GAAI;UAAEC,OAAO,EAAE,CAAC;UAAEC,QAAQ,EAAE,CAAC;UAAEC,QAAQ,EAAE,CAAC;UAAEC,QAAQ,EAAE;QAAE,CAAC;QACzER,QAAQ,CAACS,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKP,WAAW,CAACM,CAAC,CAACP,MAAM,IAAIC,WAAW,CAACO,CAAC,CAACR,MAAM,CAAC,CAAC;MACxE,OAAO;QACL;QACAH,QAAQ,CAACS,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK,IAAIC,IAAI,CAACD,CAAC,CAAC,IAAI,CAACd,SAAS,CAAC,IAAI,IAAIe,IAAI,CAACF,CAAC,CAAC,IAAI,CAACb,SAAS,CAAC,CAAC,CAAC;MACpF;MAEA,OAAOG,QAAQ;IACjB;EACF,CAAC;EACDa,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,YAAY,CAAC,CAAC,EAAE;EACvB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,YAAYA,CAAA,EAAG;MACnB,IAAI;QACF,MAAME,QAAO,GAAI,MAAM3B,KAAK,CAAC4B,GAAG,CAAC,+BAA+B,CAAC;QACjE,IAAI,CAACtB,OAAM,GAAIqB,QAAQ,CAACtB,IAAI,EAAE;MAChC,EAAE,OAAOwB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD;IACF,CAAC;IACDE,WAAWA,CAACjB,MAAM,EAAE;MAClB,IAAI,CAACP,YAAW,GAAIO,MAAM,EAAE;IAC9B,CAAC;IACDkB,SAASA,CAACC,KAAK,EAAE;MACf,IAAI,CAACzB,SAAQ,GAAIyB,KAAK,EAAE;IAC1B;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}