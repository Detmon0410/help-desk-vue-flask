{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock, createElementVNode as _createElementVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"ticket-list\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_TicketForm = _resolveComponent(\"TicketForm\");\n  const _component_TicketCard = _resolveComponent(\"TicketCard\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createCommentVNode(\" Ticket creation form \"), _createVNode(_component_TicketForm, {\n    onTicketCreated: $options.fetchTickets\n  }, null, 8 /* PROPS */, [\"onTicketCreated\"]), _createCommentVNode(\" Ticket list \"), _createElementVNode(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.tickets, ticket => {\n    return _openBlock(), _createBlock(_component_TicketCard, {\n      key: ticket.id,\n      ticket: ticket,\n      onTicketUpdated: $options.fetchTickets\n    }, null, 8 /* PROPS */, [\"ticket\", \"onTicketUpdated\"]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_createCommentVNode","_createVNode","_component_TicketForm","onTicketCreated","$options","fetchTickets","_createElementVNode","_hoisted_1","_Fragment","_renderList","$data","tickets","ticket","_createBlock","_component_TicketCard","key","id","onTicketUpdated"],"sources":["C:\\Users\\uSeR\\Desktop\\help-desk\\Frontend\\ticket-page\\src\\views\\TicketHome.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <!-- Ticket creation form -->\r\n    <TicketForm @ticket-created=\"fetchTickets\" />\r\n\r\n    <!-- Ticket list -->\r\n    <div class=\"ticket-list\">\r\n      <TicketCard \r\n        v-for=\"ticket in tickets\" \r\n        :key=\"ticket.id\" \r\n        :ticket=\"ticket\" \r\n        @ticket-updated=\"fetchTickets\" \r\n      />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport TicketForm from \"@/components/TicketForm.vue\";\r\nimport TicketCard from \"@/components/TicketCard.vue\";\r\n\r\nexport default {\r\n  components: {\r\n    TicketForm,\r\n    TicketCard\r\n  },\r\n  data() {\r\n    return {\r\n      tickets: [] // Holds the list of tickets\r\n    };\r\n  },\r\n  mounted() {\r\n    this.fetchTickets(); // Fetch tickets when the component loads\r\n  },\r\n  methods: {\r\n    async fetchTickets() {\r\n      try {\r\n        // Fetch the latest list of tickets from the backend\r\n        const response = await axios.get(\"http://127.0.0.1:5000/tickets\");\r\n        this.tickets = response.data; // Update the tickets array\r\n      } catch (error) {\r\n        console.error(\"Error fetching tickets:\", error);\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.ticket-list {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 20px;\r\n}\r\n</style>\r\n"],"mappings":";;EAMSA,KAAK,EAAC;AAAa;;;;uBAL1BC,mBAAA,CAaM,cAZJC,mBAAA,0BAA6B,EAC7BC,YAAA,CAA6CC,qBAAA;IAAhCC,eAAc,EAAEC,QAAA,CAAAC;EAAY,8CAEzCL,mBAAA,iBAAoB,EACpBM,mBAAA,CAOM,OAPNC,UAOM,I,kBANJR,mBAAA,CAKES,SAAA,QAZRC,WAAA,CAQyBC,KAAA,CAAAC,OAAO,EAAjBC,MAAM;yBADfC,YAAA,CAKEC,qBAAA;MAHCC,GAAG,EAAEH,MAAM,CAACI,EAAE;MACdJ,MAAM,EAAEA,MAAM;MACdK,eAAc,EAAEb,QAAA,CAAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}