{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"page-container\"\n};\nconst _hoisted_2 = {\n  class: \"container mt-4\"\n};\nconst _hoisted_3 = {\n  class: \"row\"\n};\nconst _hoisted_4 = {\n  class: \"pagination-container text-center mt-4\"\n};\nconst _hoisted_5 = [\"disabled\"];\nconst _hoisted_6 = {\n  class: \"mx-3\"\n};\nconst _hoisted_7 = [\"disabled\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_TicketForm = _resolveComponent(\"TicketForm\");\n  const _component_CardFilter = _resolveComponent(\"CardFilter\");\n  const _component_TicketCard = _resolveComponent(\"TicketCard\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" Ticket creation form \"), _createVNode(_component_TicketForm, {\n    onTicketCreated: $options.fetchTickets\n  }, null, 8 /* PROPS */, [\"onTicketCreated\"]), _createCommentVNode(\" Card Filter for sorting and filtering \"), _createVNode(_component_CardFilter, {\n    onFilterUpdated: $options.applyFilter,\n    onSortUpdated: $options.applySort\n  }, null, 8 /* PROPS */, [\"onFilterUpdated\", \"onSortUpdated\"]), _createCommentVNode(\" Title for the Ticket List \"), _cache[2] || (_cache[2] = _createElementVNode(\"h2\", {\n    class: \"text-center mt-4\"\n  }, \"Ticket List\", -1 /* HOISTED */)), _createCommentVNode(\" Added label here \"), _createCommentVNode(\" Ticket list \"), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.paginatedTickets, ticket => {\n    return _openBlock(), _createBlock(_component_TicketCard, {\n      key: ticket.id,\n      ticket: ticket,\n      onTicketUpdated: $options.fetchTickets,\n      class: \"col-md-4 mb-4\"\n    }, null, 8 /* PROPS */, [\"ticket\", \"onTicketUpdated\"]);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createCommentVNode(\" Pagination Controls \"), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"button\", {\n    class: \"btn btn-primary\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.goToPreviousPage && $options.goToPreviousPage(...args)),\n    disabled: $data.currentPage === 1\n  }, \" Previous \", 8 /* PROPS */, _hoisted_5), _createElementVNode(\"span\", _hoisted_6, \"Page \" + _toDisplayString($data.currentPage) + \" of \" + _toDisplayString($options.totalPages), 1 /* TEXT */), _createElementVNode(\"button\", {\n    class: \"btn btn-primary\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.goToNextPage && $options.goToNextPage(...args)),\n    disabled: $data.currentPage === $options.totalPages\n  }, \" Next \", 8 /* PROPS */, _hoisted_7)])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createCommentVNode","_createVNode","_component_TicketForm","onTicketCreated","$options","fetchTickets","_component_CardFilter","onFilterUpdated","applyFilter","onSortUpdated","applySort","_createElementVNode","_hoisted_2","_hoisted_3","_Fragment","_renderList","paginatedTickets","ticket","_createBlock","_component_TicketCard","key","id","onTicketUpdated","_hoisted_4","onClick","_cache","args","goToPreviousPage","disabled","$data","currentPage","_hoisted_5","_hoisted_6","_toDisplayString","totalPages","goToNextPage","_hoisted_7"],"sources":["C:\\Users\\uSeR\\Desktop\\help-desk\\Frontend\\ticket-page\\src\\views\\TicketHome.vue"],"sourcesContent":["<template>\r\n  <div class=\"page-container\">\r\n    <!-- Ticket creation form -->\r\n    <TicketForm @ticket-created=\"fetchTickets\" />\r\n\r\n    <!-- Card Filter for sorting and filtering -->\r\n    <CardFilter \r\n      @filter-updated=\"applyFilter\" \r\n      @sort-updated=\"applySort\" \r\n    />\r\n\r\n    <!-- Title for the Ticket List -->\r\n    <h2 class=\"text-center mt-4\">Ticket List</h2> <!-- Added label here -->\r\n\r\n    <!-- Ticket list -->\r\n    <div class=\"container mt-4\">\r\n      <div class=\"row\">\r\n        <TicketCard \r\n          v-for=\"ticket in paginatedTickets\" \r\n          :key=\"ticket.id\" \r\n          :ticket=\"ticket\" \r\n          @ticket-updated=\"fetchTickets\" \r\n          class=\"col-md-4 mb-4\"\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Pagination Controls -->\r\n    <div class=\"pagination-container text-center mt-4\">\r\n      <button \r\n        class=\"btn btn-primary\" \r\n        @click=\"goToPreviousPage\" \r\n        :disabled=\"currentPage === 1\"\r\n      >\r\n        Previous\r\n      </button>\r\n      <span class=\"mx-3\">Page {{ currentPage }} of {{ totalPages }}</span>\r\n      <button \r\n        class=\"btn btn-primary\" \r\n        @click=\"goToNextPage\" \r\n        :disabled=\"currentPage === totalPages\"\r\n      >\r\n        Next\r\n      </button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport TicketForm from \"@/components/TicketForm.vue\";\r\nimport TicketCard from \"@/components/TicketCard.vue\";\r\nimport CardFilter from \"@/components/CardFilter.vue\";\r\n\r\nexport default {\r\n  components: {\r\n    TicketForm,\r\n    CardFilter,\r\n    TicketCard,\r\n  },\r\n  data() {\r\n    return {\r\n      tickets: [], // Holds the list of all tickets\r\n      filterStatus: \"\", // Tracks the selected status filter\r\n      sortField: \"created_at\", // Tracks the selected sort field\r\n      currentPage: 1, // Tracks the current page\r\n      ticketsPerPage: 9, // Number of tickets to display per page\r\n    };\r\n  },\r\n  computed: {\r\n  filteredTickets() {\r\n    let filtered = [...this.tickets];\r\n\r\n    // Apply status filter\r\n    if (this.filterStatus) {\r\n      filtered = filtered.filter(ticket => ticket.status === this.filterStatus);\r\n    }\r\n\r\n    // Apply sorting logic\r\n    if (this.sortField === \"status\") {\r\n      const statusOrder = { Pending: 1, Accepted: 2, Resolved: 3, Rejected: 4 };\r\n      filtered.sort((a, b) => statusOrder[a.status] - statusOrder[b.status]);\r\n    } else {\r\n      // Sort by created_at, showing all tickets, even those with null/undefined updated_at\r\n      if (this.sortField === \"created_at\") {\r\n        filtered.sort((a, b) => new Date(b.created_at) - new Date(a.created_at));\r\n      } \r\n      else if (this.sortField === \"created_at_old\") {\r\n        filtered.sort((a, b) => new Date(a.created_at) - new Date(b.created_at));\r\n      } \r\n      // Sort by updated_at, excluding tickets with null/undefined updated_at\r\n      else if (this.sortField === \"updated_at\") {\r\n        filtered = filtered.filter(ticket => ticket.updated_at !== null && ticket.updated_at !== undefined);\r\n        filtered.sort((a, b) => new Date(b.updated_at) - new Date(a.updated_at));\r\n      }\r\n      else if (this.sortField === \"updated_at_old\") {\r\n        filtered = filtered.filter(ticket => ticket.updated_at !== null && ticket.updated_at !== undefined);\r\n        filtered.sort((a, b) => new Date(a.updated_at) - new Date(b.updated_at)); // Older updates first\r\n      }\r\n    }\r\n\r\n    return filtered;\r\n  },\r\n  // Paginate the filtered tickets\r\n  paginatedTickets() {\r\n    const startIndex = (this.currentPage - 1) * this.ticketsPerPage;\r\n    return this.filteredTickets.slice(startIndex, startIndex + this.ticketsPerPage);\r\n  },\r\n  // Calculate total pages based on ticketsPerPage\r\n  totalPages() {\r\n    return Math.ceil(this.filteredTickets.length / this.ticketsPerPage);\r\n  }\r\n},\r\n  mounted() {\r\n    this.fetchTickets(); // Fetch tickets when the component is mounted\r\n  },\r\n  methods: {\r\n    async fetchTickets() {\r\n      try {\r\n        const response = await axios.get(\"http://127.0.0.1:5000/tickets\");\r\n        this.tickets = response.data; // Populate the tickets array with API data\r\n      } catch (error) {\r\n        console.error(\"Error fetching tickets:\", error);\r\n      }\r\n    },\r\n    applyFilter(status) {\r\n      this.filterStatus = status; // Update the filter status based on CardFilter input\r\n    },\r\n    applySort(field) {\r\n      this.sortField = field; // Update the sort field based on CardFilter input\r\n    },\r\n    // Move to the next page\r\n    goToNextPage() {\r\n      if (this.currentPage < this.totalPages) {\r\n        this.currentPage++;\r\n      }\r\n    },\r\n    // Move to the previous page\r\n    goToPreviousPage() {\r\n      if (this.currentPage > 1) {\r\n        this.currentPage--;\r\n      }\r\n    }\r\n  },\r\n};\r\n</script>\r\n<style scoped>\r\n.page-container {\r\n  padding-top: 40px; /* Adds space at the top of the page */\r\n  padding-bottom: 40px; /* Adds space at the bottom of the page */\r\n}\r\n\r\n.ticket-list {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 20px;\r\n}\r\n\r\n.pagination-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\nbutton {\r\n  margin: 0 10px;\r\n}\r\n</style>\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAAgB;;EAcpBA,KAAK,EAAC;AAAgB;;EACpBA,KAAK,EAAC;AAAK;;EAYbA,KAAK,EAAC;AAAuC;mBA5BtD;;EAoCYA,KAAK,EAAC;AAAM;mBApCxB;;;;;uBACEC,mBAAA,CA4CM,OA5CNC,UA4CM,GA3CJC,mBAAA,0BAA6B,EAC7BC,YAAA,CAA6CC,qBAAA;IAAhCC,eAAc,EAAEC,QAAA,CAAAC;EAAY,8CAEzCL,mBAAA,2CAA8C,EAC9CC,YAAA,CAGEK,qBAAA;IAFCC,eAAc,EAAEH,QAAA,CAAAI,WAAW;IAC3BC,aAAY,EAAEL,QAAA,CAAAM;iEAGjBV,mBAAA,+BAAkC,E,0BAClCW,mBAAA,CAA6C;IAAzCd,KAAK,EAAC;EAAkB,GAAC,aAAW,sBAAMG,mBAAA,sBAAyB,EAEvEA,mBAAA,iBAAoB,EACpBW,mBAAA,CAUM,OAVNC,UAUM,GATJD,mBAAA,CAQM,OARNE,UAQM,I,kBAPJf,mBAAA,CAMEgB,SAAA,QAvBVC,WAAA,CAkB2BX,QAAA,CAAAY,gBAAgB,EAA1BC,MAAM;yBADfC,YAAA,CAMEC,qBAAA;MAJCC,GAAG,EAAEH,MAAM,CAACI,EAAE;MACdJ,MAAM,EAAEA,MAAM;MACdK,eAAc,EAAElB,QAAA,CAAAC,YAAY;MAC7BR,KAAK,EAAC;;sCAKZG,mBAAA,yBAA4B,EAC5BW,mBAAA,CAgBM,OAhBNY,UAgBM,GAfJZ,mBAAA,CAMS;IALPd,KAAK,EAAC,iBAAiB;IACtB2B,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEtB,QAAA,CAAAuB,gBAAA,IAAAvB,QAAA,CAAAuB,gBAAA,IAAAD,IAAA,CAAgB;IACvBE,QAAQ,EAAEC,KAAA,CAAAC,WAAW;KACvB,YAED,iBAnCNC,UAAA,GAoCMpB,mBAAA,CAAoE,QAApEqB,UAAoE,EAAjD,OAAK,GAAAC,gBAAA,CAAGJ,KAAA,CAAAC,WAAW,IAAG,MAAI,GAAAG,gBAAA,CAAG7B,QAAA,CAAA8B,UAAU,kBAC1DvB,mBAAA,CAMS;IALPd,KAAK,EAAC,iBAAiB;IACtB2B,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEtB,QAAA,CAAA+B,YAAA,IAAA/B,QAAA,CAAA+B,YAAA,IAAAT,IAAA,CAAY;IACnBE,QAAQ,EAAEC,KAAA,CAAAC,WAAW,KAAK1B,QAAA,CAAA8B;KAC5B,QAED,iBA3CNE,UAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}