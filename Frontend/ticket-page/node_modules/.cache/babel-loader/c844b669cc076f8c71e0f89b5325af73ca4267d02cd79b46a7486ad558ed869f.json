{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport axios from \"axios\";\nimport TicketForm from \"@/components/TicketForm.vue\";\nimport TicketCard from \"@/components/TicketCard.vue\";\nimport CardFilter from \"@/components/CardFilter.vue\";\nexport default {\n  components: {\n    TicketForm,\n    CardFilter,\n    TicketCard\n  },\n  data() {\n    return {\n      tickets: [],\n      // Holds all tickets from the backend\n      filteredTickets: [],\n      // Holds filtered and sorted tickets\n      filterStatus: \"\",\n      // Currently selected status filter\n      sortField: \"created_at\" // Currently selected sort field\n    };\n  },\n  mounted() {\n    this.fetchTickets(); // Fetch tickets when the component loads\n  },\n  methods: {\n    async fetchTickets() {\n      try {\n        const response = await axios.get(\"http://127.0.0.1:5000/tickets\");\n        this.tickets = response.data;\n        this.applyFiltersAndSort();\n      } catch (error) {\n        console.error(\"Error fetching tickets:\", error);\n      }\n    },\n    filterTickets(status) {\n      this.filterStatus = status;\n      this.applyFiltersAndSort();\n    },\n    sortTickets(field) {\n      this.sortField = field;\n      this.applyFiltersAndSort();\n    },\n    applyFiltersAndSort() {\n      // Filter tickets by status\n      let tickets = this.filterStatus ? this.tickets.filter(ticket => ticket.status === this.filterStatus) : [...this.tickets];\n\n      // Sort tickets\n      if (this.sortField === \"status\") {\n        const statusOrder = {\n          Pending: 1,\n          Accepted: 2,\n          Resolved: 3,\n          Rejected: 4\n        };\n        tickets.sort((a, b) => statusOrder[a.status] - statusOrder[b.status]);\n      } else {\n        tickets.sort((a, b) => new Date(a[this.sortField]) - new Date(b[this.sortField]));\n      }\n      this.filteredTickets = tickets;\n    }\n  }\n};","map":{"version":3,"names":["axios","TicketForm","TicketCard","CardFilter","components","data","tickets","filteredTickets","filterStatus","sortField","mounted","fetchTickets","methods","response","get","applyFiltersAndSort","error","console","filterTickets","status","sortTickets","field","filter","ticket","statusOrder","Pending","Accepted","Resolved","Rejected","sort","a","b","Date"],"sources":["C:\\Users\\uSeR\\Desktop\\help-desk\\Frontend\\ticket-page\\src\\components\\CardFilter.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <!-- Ticket creation form -->\r\n      <TicketForm @ticket-created=\"fetchTickets\" />\r\n  \r\n      <!-- Card filter -->\r\n      <CardFilter \r\n        @filter-updated=\"filterTickets\" \r\n        @sort-updated=\"sortTickets\" \r\n      />\r\n  \r\n      <!-- Ticket list -->\r\n      <div class=\"container mt-4\">\r\n        <div class=\"row\">\r\n          <TicketCard \r\n            v-for=\"ticket in filteredTickets\" \r\n            :key=\"ticket.id\" \r\n            :ticket=\"ticket\" \r\n            @ticket-updated=\"fetchTickets\" \r\n            class=\"col-md-4 mb-4\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from \"axios\";\r\n  import TicketForm from \"@/components/TicketForm.vue\";\r\n  import TicketCard from \"@/components/TicketCard.vue\";\r\n  import CardFilter from \"@/components/CardFilter.vue\";\r\n  \r\n  export default {\r\n    components: {\r\n      TicketForm,\r\n      CardFilter,\r\n      TicketCard,\r\n    },\r\n    data() {\r\n      return {\r\n        tickets: [], // Holds all tickets from the backend\r\n        filteredTickets: [], // Holds filtered and sorted tickets\r\n        filterStatus: \"\", // Currently selected status filter\r\n        sortField: \"created_at\", // Currently selected sort field\r\n      };\r\n    },\r\n    mounted() {\r\n      this.fetchTickets(); // Fetch tickets when the component loads\r\n    },\r\n    methods: {\r\n      async fetchTickets() {\r\n        try {\r\n          const response = await axios.get(\"http://127.0.0.1:5000/tickets\");\r\n          this.tickets = response.data;\r\n          this.applyFiltersAndSort();\r\n        } catch (error) {\r\n          console.error(\"Error fetching tickets:\", error);\r\n        }\r\n      },\r\n      filterTickets(status) {\r\n        this.filterStatus = status;\r\n        this.applyFiltersAndSort();\r\n      },\r\n      sortTickets(field) {\r\n        this.sortField = field;\r\n        this.applyFiltersAndSort();\r\n      },\r\n      applyFiltersAndSort() {\r\n        // Filter tickets by status\r\n        let tickets = this.filterStatus\r\n          ? this.tickets.filter((ticket) => ticket.status === this.filterStatus)\r\n          : [...this.tickets];\r\n  \r\n        // Sort tickets\r\n        if (this.sortField === \"status\") {\r\n          const statusOrder = {\r\n            Pending: 1,\r\n            Accepted: 2,\r\n            Resolved: 3,\r\n            Rejected: 4,\r\n          };\r\n          tickets.sort(\r\n            (a, b) => statusOrder[a.status] - statusOrder[b.status]\r\n          );\r\n        } else {\r\n          tickets.sort(\r\n            (a, b) => new Date(a[this.sortField]) - new Date(b[this.sortField])\r\n          );\r\n        }\r\n  \r\n        this.filteredTickets = tickets;\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .card-filter {\r\n    background-color: #f8f9fa;\r\n    padding: 10px;\r\n    border: 1px solid #ddd;\r\n    border-radius: 5px;\r\n    margin-top: 20px;\r\n  }\r\n  </style>\r\n  "],"mappings":";;AA2BE,OAAOA,KAAI,MAAO,OAAO;AACzB,OAAOC,UAAS,MAAO,6BAA6B;AACpD,OAAOC,UAAS,MAAO,6BAA6B;AACpD,OAAOC,UAAS,MAAO,6BAA6B;AAEpD,eAAe;EACbC,UAAU,EAAE;IACVH,UAAU;IACVE,UAAU;IACVD;EACF,CAAC;EACDG,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,EAAE;MAAE;MACbC,eAAe,EAAE,EAAE;MAAE;MACrBC,YAAY,EAAE,EAAE;MAAE;MAClBC,SAAS,EAAE,YAAY,CAAE;IAC3B,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,YAAY,CAAC,CAAC,EAAE;EACvB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,YAAYA,CAAA,EAAG;MACnB,IAAI;QACF,MAAME,QAAO,GAAI,MAAMb,KAAK,CAACc,GAAG,CAAC,+BAA+B,CAAC;QACjE,IAAI,CAACR,OAAM,GAAIO,QAAQ,CAACR,IAAI;QAC5B,IAAI,CAACU,mBAAmB,CAAC,CAAC;MAC5B,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD;IACF,CAAC;IACDE,aAAaA,CAACC,MAAM,EAAE;MACpB,IAAI,CAACX,YAAW,GAAIW,MAAM;MAC1B,IAAI,CAACJ,mBAAmB,CAAC,CAAC;IAC5B,CAAC;IACDK,WAAWA,CAACC,KAAK,EAAE;MACjB,IAAI,CAACZ,SAAQ,GAAIY,KAAK;MACtB,IAAI,CAACN,mBAAmB,CAAC,CAAC;IAC5B,CAAC;IACDA,mBAAmBA,CAAA,EAAG;MACpB;MACA,IAAIT,OAAM,GAAI,IAAI,CAACE,YAAW,GAC1B,IAAI,CAACF,OAAO,CAACgB,MAAM,CAAEC,MAAM,IAAKA,MAAM,CAACJ,MAAK,KAAM,IAAI,CAACX,YAAY,IACnE,CAAC,GAAG,IAAI,CAACF,OAAO,CAAC;;MAErB;MACA,IAAI,IAAI,CAACG,SAAQ,KAAM,QAAQ,EAAE;QAC/B,MAAMe,WAAU,GAAI;UAClBC,OAAO,EAAE,CAAC;UACVC,QAAQ,EAAE,CAAC;UACXC,QAAQ,EAAE,CAAC;UACXC,QAAQ,EAAE;QACZ,CAAC;QACDtB,OAAO,CAACuB,IAAI,CACV,CAACC,CAAC,EAAEC,CAAC,KAAKP,WAAW,CAACM,CAAC,CAACX,MAAM,IAAIK,WAAW,CAACO,CAAC,CAACZ,MAAM,CACxD,CAAC;MACH,OAAO;QACLb,OAAO,CAACuB,IAAI,CACV,CAACC,CAAC,EAAEC,CAAC,KAAK,IAAIC,IAAI,CAACF,CAAC,CAAC,IAAI,CAACrB,SAAS,CAAC,IAAI,IAAIuB,IAAI,CAACD,CAAC,CAAC,IAAI,CAACtB,SAAS,CAAC,CACpE,CAAC;MACH;MAEA,IAAI,CAACF,eAAc,GAAID,OAAO;IAChC;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}