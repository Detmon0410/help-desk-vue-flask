{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, vModelSelect as _vModelSelect, withDirectives as _withDirectives, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  class: \"card\"\n};\nconst _hoisted_2 = {\n  class: \"card-body\"\n};\nconst _hoisted_3 = {\n  class: \"card-title\"\n};\nconst _hoisted_4 = {\n  class: \"card-text\"\n};\nconst _hoisted_5 = {\n  class: \"card-text\"\n};\nconst _hoisted_6 = {\n  class: \"card-text\"\n};\nconst _hoisted_7 = {\n  class: \"card-text\"\n};\nconst _hoisted_8 = {\n  key: 0\n};\nconst _hoisted_9 = {\n  class: \"ticket-edit\"\n};\nconst _hoisted_10 = {\n  class: \"form-group\"\n};\nconst _hoisted_11 = {\n  class: \"button-group\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createCommentVNode(\" Ticket Card View \"), !$data.editMode ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    class: _normalizeClass([\"ticket-card\", $options.statusClass]),\n    onClick: _cache[0] || (_cache[0] = $event => $data.editMode = true)\n  }, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"h5\", _hoisted_3, _toDisplayString($props.ticket.title), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_4, [_cache[4] || (_cache[4] = _createElementVNode(\"strong\", null, \"Description:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($props.ticket.description), 1 /* TEXT */)]), _createElementVNode(\"p\", _hoisted_5, [_cache[5] || (_cache[5] = _createElementVNode(\"strong\", null, \"Contact Information:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($props.ticket.user_info), 1 /* TEXT */)]), _createElementVNode(\"p\", _hoisted_6, [_cache[6] || (_cache[6] = _createElementVNode(\"strong\", null, \"Status:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($props.ticket.status), 1 /* TEXT */)]), _createElementVNode(\"p\", _hoisted_7, [_cache[7] || (_cache[7] = _createElementVNode(\"strong\", null, \"Created Timestamp:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($props.ticket.created_at), 1 /* TEXT */)]), $props.ticket.updated_at ? (_openBlock(), _createElementBlock(\"p\", _hoisted_8, [_cache[8] || (_cache[8] = _createElementVNode(\"strong\", null, \"Update Timestamp:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($props.ticket.updated_at), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)])])], 2 /* CLASS */)) : (_openBlock(), _createElementBlock(_Fragment, {\n    key: 1\n  }, [_createCommentVNode(\" Ticket Edit Mode \"), _createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"div\", _hoisted_10, [_cache[10] || (_cache[10] = _createElementVNode(\"label\", {\n    for: \"status-select\"\n  }, [_createElementVNode(\"strong\", null, \"Status:\")], -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"select\", {\n    id: \"status-select\",\n    class: \"form-control\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.editableStatus = $event)\n  }, _cache[9] || (_cache[9] = [_createElementVNode(\"option\", {\n    value: \"Pending\"\n  }, \"Pending\", -1 /* HOISTED */), _createElementVNode(\"option\", {\n    value: \"Accepted\"\n  }, \"Accepted\", -1 /* HOISTED */), _createElementVNode(\"option\", {\n    value: \"Resolved\"\n  }, \"Resolved\", -1 /* HOISTED */), _createElementVNode(\"option\", {\n    value: \"Rejected\"\n  }, \"Rejected\", -1 /* HOISTED */)]), 512 /* NEED_PATCH */), [[_vModelSelect, $data.editableStatus]])]), _createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"button\", {\n    class: \"btn btn-primary\",\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.submitEdit && $options.submitEdit(...args))\n  }, \"Submit\"), _createElementVNode(\"button\", {\n    class: \"btn btn-secondary\",\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.cancelEdit && $options.cancelEdit(...args))\n  }, \"Cancel\")])])], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */))]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_createCommentVNode","$data","editMode","_normalizeClass","$options","statusClass","onClick","_cache","$event","_createElementVNode","_hoisted_1","_hoisted_2","_hoisted_3","_toDisplayString","$props","ticket","title","_hoisted_4","_createTextVNode","description","_hoisted_5","user_info","_hoisted_6","status","_hoisted_7","created_at","updated_at","_hoisted_8","_Fragment","_hoisted_9","_hoisted_10","for","id","editableStatus","value","_hoisted_11","args","submitEdit","cancelEdit"],"sources":["C:\\Users\\uSeR\\Desktop\\help-desk\\Frontend\\ticket-page\\src\\components\\TicketCard.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <!-- Ticket Card View -->\r\n    <div\r\n      class=\"ticket-card\"\r\n      :class=\"statusClass\"\r\n      v-if=\"!editMode\"\r\n      @click=\"editMode = true\"\r\n    >\r\n      <div class=\"card\">\r\n        <div class=\"card-body\">\r\n          <h5 class=\"card-title\">{{ ticket.title }}</h5>\r\n          <p class=\"card-text\"><strong>Description:</strong> {{ ticket.description }}</p>\r\n          <p class=\"card-text\"><strong>Contact Information:</strong> {{ ticket.user_info }}</p>\r\n          <p class=\"card-text\"><strong>Status:</strong> {{ ticket.status }}</p>\r\n          <p class=\"card-text\"><strong>Created Timestamp:</strong> {{ ticket.created_at }}</p>\r\n          <p v-if=\"ticket.updated_at\"><strong>Update Timestamp:</strong> {{ ticket.updated_at }}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Ticket Edit Mode -->\r\n    <div class=\"ticket-edit\" v-else>\r\n      <div class=\"form-group\">\r\n        <label for=\"status-select\"><strong>Status:</strong></label>\r\n        <select id=\"status-select\" class=\"form-control\" v-model=\"editableStatus\">\r\n          <option value=\"Pending\">Pending</option>\r\n          <option value=\"Accepted\">Accepted</option>\r\n          <option value=\"Resolved\">Resolved</option>\r\n          <option value=\"Rejected\">Rejected</option>\r\n        </select>\r\n      </div>\r\n\r\n      <div class=\"button-group\">\r\n        <button class=\"btn btn-primary\" @click=\"submitEdit\">Submit</button>\r\n        <button class=\"btn btn-secondary\" @click=\"cancelEdit\">Cancel</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  props: [\"ticket\"],\r\n  data() {\r\n    return {\r\n      editMode: false,\r\n      editableStatus: this.ticket.status\r\n    };\r\n  },\r\n  computed: {\r\n    // Computed property to return the class based on the ticket status\r\n    statusClass() {\r\n      switch (this.ticket.status) {\r\n        case 'Pending':\r\n          return 'border-warning'; // Yellowish border for Pending\r\n        case 'Accepted':\r\n          return 'border-primary'; // Blue border for Accepted\r\n        case 'Resolved':\r\n          return 'border-success'; // Green border for Resolved\r\n        case 'Rejected':\r\n          return 'border-danger'; // Red border for Rejected\r\n        default:\r\n          return ''; // Default border color\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    async submitEdit() {\r\n      try {\r\n        // Send the update request to the backend\r\n        await axios.put(`http://127.0.0.1:5000/tickets/${this.ticket.id}`, {\r\n          status: this.editableStatus\r\n        });\r\n\r\n        // Notify the parent to refresh the ticket list\r\n        this.$emit(\"ticket-updated\");\r\n\r\n        this.editMode = false; // Exit edit mode\r\n      } catch (error) {\r\n        console.error(\"Error updating ticket:\", error);\r\n        alert(\"Failed to update the ticket. Please try again.\");\r\n      }\r\n    },\r\n    cancelEdit() {\r\n      this.editableStatus = this.ticket.status;\r\n      this.editMode = false;\r\n    }\r\n  }\r\n};\r\n</script>\r\n<style scoped>\r\n.ticket-card,\r\n.ticket-edit {\r\n  border: 2px solid #ddd;\r\n  padding: 15px;\r\n  border-radius: 8px;\r\n  background-color: #f9f9f9;\r\n}\r\n\r\n.ticket-card:hover {\r\n  cursor: pointer;\r\n  background-color: #ececec;\r\n}\r\n\r\n.button-group {\r\n  margin-top: 10px;\r\n}\r\n\r\nbutton {\r\n  margin-right: 10px;\r\n}\r\n\r\n/* Bootstrap border classes will color the border based on status */\r\n.border-warning {\r\n  border-color: #ffc107; /* Yellow for Pending */\r\n}\r\n\r\n.border-primary {\r\n  border-color: #007bff; /* Blue for Accepted */\r\n}\r\n\r\n.border-success {\r\n  border-color: #28a745; /* Green for Resolved */\r\n}\r\n\r\n.border-danger {\r\n  border-color: #dc3545; /* Red for Rejected */\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}