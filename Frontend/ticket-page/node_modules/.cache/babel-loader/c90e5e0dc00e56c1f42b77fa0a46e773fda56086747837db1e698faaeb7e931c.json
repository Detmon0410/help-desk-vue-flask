{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"ticket-list\"\n};\nconst _hoisted_3 = {\n  class: \"ticket-cards\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_TicketForm = _resolveComponent(\"TicketForm\");\n  const _component_TicketCard = _resolveComponent(\"TicketCard\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" New Ticket Form at the top \"), _createVNode(_component_TicketForm, {\n    onTicketCreated: $options.fetchTickets\n  }, null, 8 /* PROPS */, [\"onTicketCreated\"]), _createCommentVNode(\" List of Ticket Cards at the bottom \"), _createElementVNode(\"div\", _hoisted_2, [_cache[0] || (_cache[0] = _createElementVNode(\"h2\", null, \"Tickets\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.tickets, ticket => {\n    return _openBlock(), _createBlock(_component_TicketCard, {\n      key: ticket.id,\n      ticket: ticket\n    }, null, 8 /* PROPS */, [\"ticket\"]);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createCommentVNode","_createVNode","_component_TicketForm","onTicketCreated","$options","fetchTickets","_createElementVNode","_hoisted_2","_hoisted_3","_Fragment","_renderList","$data","tickets","ticket","_createBlock","_component_TicketCard","key","id"],"sources":["C:\\Users\\uSeR\\Desktop\\help-desk\\Frontend\\ticket-page\\src\\views\\TicketHome.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <!-- New Ticket Form at the top -->\r\n    <TicketForm @ticket-created=\"fetchTickets\" />\r\n    \r\n    <!-- List of Ticket Cards at the bottom -->\r\n    <div class=\"ticket-list\">\r\n      <h2>Tickets</h2>\r\n      <div class=\"ticket-cards\">\r\n        <TicketCard v-for=\"ticket in tickets\" :key=\"ticket.id\" :ticket=\"ticket\" />\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport TicketForm from \"@/components/TicketForm.vue\";\r\nimport TicketCard from \"@/components/TicketCard.vue\";\r\n\r\nexport default {\r\n  components: {\r\n    TicketForm,\r\n    TicketCard\r\n  },\r\n  data() {\r\n    return {\r\n      tickets: []\r\n    };\r\n  },\r\n  mounted() {\r\n    this.fetchTickets(); // Call the API when the component is mounted\r\n  },\r\n  methods: {\r\n    async fetchTickets() {\r\n      try {\r\n        const response = await axios.get(\"http://127.0.0.1:5000/tickets\"); // Make GET request to backend\r\n        this.tickets = response.data; // Assign the tickets data to the component's state\r\n      } catch (error) {\r\n        console.error(\"Error fetching tickets:\", error); // Handle error\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 20px;\r\n}\r\n\r\n.ticket-list {\r\n  margin-top: 20px;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n\r\n.ticket-cards {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 15px;\r\n}\r\n\r\n.ticket-cards > * {\r\n  max-width: 300px;\r\n  width: 100%;\r\n}\r\n</style>\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAAW;;EAKfA,KAAK,EAAC;AAAa;;EAEjBA,KAAK,EAAC;AAAc;;;;uBAP7BC,mBAAA,CAWM,OAXNC,UAWM,GAVJC,mBAAA,gCAAmC,EACnCC,YAAA,CAA6CC,qBAAA;IAAhCC,eAAc,EAAEC,QAAA,CAAAC;EAAY,8CAEzCL,mBAAA,wCAA2C,EAC3CM,mBAAA,CAKM,OALNC,UAKM,G,0BAJJD,mBAAA,CAAgB,YAAZ,SAAO,sBACXA,mBAAA,CAEM,OAFNE,UAEM,I,kBADJV,mBAAA,CAA0EW,SAAA,QATlFC,WAAA,CASqCC,KAAA,CAAAC,OAAO,EAAjBC,MAAM;yBAAzBC,YAAA,CAA0EC,qBAAA;MAAnCC,GAAG,EAAEH,MAAM,CAACI,EAAE;MAAGJ,MAAM,EAAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}