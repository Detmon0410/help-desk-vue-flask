{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock, createElementVNode as _createElementVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"ticket-list\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_TicketForm = _resolveComponent(\"TicketForm\");\n  const _component_TicketCard = _resolveComponent(\"TicketCard\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_TicketForm, {\n    onTicketCreated: $options.fetchTickets\n  }, null, 8 /* PROPS */, [\"onTicketCreated\"]), _createElementVNode(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.tickets, ticket => {\n    return _openBlock(), _createBlock(_component_TicketCard, {\n      key: ticket.id,\n      ticket: ticket\n    }, null, 8 /* PROPS */, [\"ticket\"]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_createVNode","_component_TicketForm","onTicketCreated","$options","fetchTickets","_createElementVNode","_hoisted_1","_Fragment","_renderList","$data","tickets","ticket","_createBlock","_component_TicketCard","key","id"],"sources":["C:\\Users\\uSeR\\Desktop\\help-desk\\Frontend\\ticket-page\\src\\views\\TicketHome.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <TicketForm @ticket-created=\"fetchTickets\" />\r\n      <div class=\"ticket-list\">\r\n        <TicketCard v-for=\"ticket in tickets\" :key=\"ticket.id\" :ticket=\"ticket\" />\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from \"axios\";\r\n  import TicketForm from \"@/components/TicketForm.vue\";\r\n  import TicketCard from \"@/components/TicketCard.vue\";\r\n  \r\n  export default {\r\n    components: {\r\n      TicketForm,\r\n      TicketCard\r\n    },\r\n    data() {\r\n      return {\r\n        tickets: []\r\n      };\r\n    },\r\n    mounted() {\r\n      this.fetchTickets();\r\n    },\r\n    methods: {\r\n      async fetchTickets() {\r\n        try {\r\n          const response = await axios.get(\"http://127.0.0.1:5000/tickets\");\r\n          this.tickets = response.data;\r\n        } catch (error) {\r\n          console.error(\"Error fetching tickets:\", error);\r\n        }\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .ticket-list {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    gap: 20px;\r\n  }\r\n  </style>\r\n  "],"mappings":";;EAGWA,KAAK,EAAC;AAAa;;;;uBAF1BC,mBAAA,CAKM,cAJJC,YAAA,CAA6CC,qBAAA;IAAhCC,eAAc,EAAEC,QAAA,CAAAC;EAAY,8CACzCC,mBAAA,CAEM,OAFNC,UAEM,I,kBADJP,mBAAA,CAA0EQ,SAAA,QAJlFC,WAAA,CAIqCC,KAAA,CAAAC,OAAO,EAAjBC,MAAM;yBAAzBC,YAAA,CAA0EC,qBAAA;MAAnCC,GAAG,EAAEH,MAAM,CAACI,EAAE;MAAGJ,MAAM,EAAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}